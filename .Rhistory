fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
names(fit)
fit$
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
fit$Delta
sqrt(diag(vcov(fit)))
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
summary(fit)
V <- MASS::ginv(object$fit$hessian)
Delta_z <- diag(1/z_sd)
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
summary(fit)
fit <- zibellreg(nf~lroll, data=faults, init=0)
data("faults")
head(faults)
fit <- bellreg(nf~lroll, data=faults, init=0)
summary(fit)
class(fit)
summary(fit)
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
summary(fit)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
teste <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
summary(teste)
mle <- bellreg(nf~lroll, data=faults, init=0)
summary(mle)
class(mle)
object <- mle
#' Print the summary.bellreg output
#'
#' @export
#' @param x an object of the class summary.bellreg.
#' @param ... further arguments passed to or from other methods.
#' @return a summary of the fitted model.
#'
print.summary.bellreg <- function(x, ...){
if(x$approach == "mle"){
cat("Call:\n")
print(x$call)
cat("\n")
cat("Coefficients:\n")
stats::printCoefmat(x$coefficients, P.value=TRUE, has.Pvalue=TRUE)
cat("\n")
# cat("----------------------- \n")
# cat("\n")
cat("logLik =", x$logLik, " ", "AIC =", x$AIC,"\n")
}else{
cat("\n")
print(x$call)
cat("\n")
print(x$coefficients)
cat("\n")
cat("Inference for Stan model: ", x$model_name, '.\n', sep = '')
cat(x$chains, " chains, each with iter=", x$iter,
"; warmup=", x$warmup, "; thin=", x$thin, "; \n",
"post-warmup draws per chain=", x$n_kept[1], ", ",
"total post-warmup draws=", sum(x$n_kept), ".\n\n", sep = '')
}
}
#' Summary for the bellreg model
#'
#' @aliases summary.bellreg
#' @export
#' @param object an objecto of the class 'bellreg'.
#' @param ... further arguments passed to or from other methods.
#'
#'
summary.bellreg <- function(object, ...){
if(object$approach == "mle"){
p <- object$p
labels <- object$labels
coefficients <- object$fit$par
V <- vcov(object)
se <- sqrt(diag(V))
zval <- coefficients / se
TAB <- cbind(Estimate = coefficients,
StdErr = se,
z.value = zval,
p.value = 2*stats::pnorm(-abs(zval)))
if(p==1)
{
TAB <- t(as.matrix(TAB[1:p,]))
}else{
TAB <- TAB[1:p,]
}
rownames(TAB) <- labels
res <- list(call=object$call,
coefficients=TAB,
logLik = object$logLik,
AIC = object$AIC)
}else{
labels <- object$labels
s <- rstan::summary(object$fit, pars=c("beta"))
TAB <- round(s$summary, digits = 3)
rownames(TAB) <- labels
n_kept <- object$fit@sim$n_save - object$fit@sim$warmup2
res <- list(call=object$call, coefficients=TAB,
n_kept=n_kept, model_name=object$fit@model_name,
chains=object$fit@sim$chains, warmup=object$fit@sim$warmup,
thin=object$fit@sim$thin, iter=object$fit@sim$iter, approach=object$approach)
}
res$approach <- object$approach
class(res) <- "summary.bellreg"
return(res)
}
summary.bellreg(object)
if(object$approach == "mle"){
p <- object$p
labels <- object$labels
coefficients <- object$fit$par
V <- vcov(object)
se <- sqrt(diag(V))
zval <- coefficients / se
TAB <- cbind(Estimate = coefficients,
StdErr = se,
z.value = zval,
p.value = 2*stats::pnorm(-abs(zval)))
if(p==1)
{
TAB <- t(as.matrix(TAB[1:p,]))
}else{
TAB <- TAB[1:p,]
}
rownames(TAB) <- labels
res <- list(call=object$call,
coefficients=TAB,
logLik = object$logLik,
AIC = object$AIC)
}else{
labels <- object$labels
s <- rstan::summary(object$fit, pars=c("beta"))
TAB <- round(s$summary, digits = 3)
rownames(TAB) <- labels
n_kept <- object$fit@sim$n_save - object$fit@sim$warmup2
res <- list(call=object$call, coefficients=TAB,
n_kept=n_kept, model_name=object$fit@model_name,
chains=object$fit@sim$chains, warmup=object$fit@sim$warmup,
thin=object$fit@sim$thin, iter=object$fit@sim$iter, approach=object$approach)
}
p <- object$p
labels <- object$labels
coefficients <- object$fit$par
V <- vcov(object)
p <- object$p
labels <- object$labels
coefficients <- object$fit$par
V <- vcov(object)
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
library(bellreg)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
summary(fit)
mle <- bellreg(nf~lroll, data=faults, init=0)
summary(mle)
library(bellreg)
data(cells)
head(cells)
library(tidyverse)
cells <- cells %>%
mutate(
smoker = ifelse(smoker == TRUE, 0, 1),
sex = ifelse(sex == "female", 0, 1)
)
fit <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, init=0)
summary(fit)
bayes <- zibellreg(cells~smoker+sex|smoker+sex, data=cells, approach = "bayes")
summary(bayes)
summary(fit)
devtools::document()
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
# devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
# devtools::check_win_devel()
# rhub::check_for_cran()
devtools::build_manual()
devtools::check()
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
devtools::build_manual()
# git remote add origin https://github.com/fndemarqui/bellreg.git
devtools::check()
devtools::submit_cran()
devtools::submit_cran()
devtools::document()
devtools::install(quick=TRUE)
library(bellreg)
library(bellreg)
# ML approach:
mle <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = "mle")
summary(mle)
# Bayesian approach:
bayes <- zibellreg(cells ~ 1|smoker+gender, data = cells, approach = "bayes", chains = 2, iter = 100)
summary(bayes)
# ML approach:
mle <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = "mle")
summary(mle)
coef(mle)
vcov(mle)
confint(mle)
model.matrix(mle)
library(bellreg)
# ML approach:
mle <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = "mle")
summary(mle)
coef(mle)
vcov(mle)
# Bayesian approach:
bayes <- zibellreg(cells ~ 1|smoker+gender, data = cells, approach = "bayes", chains = 2, iter = 100)
summary(bayes)
coef(mle)
vcov(mle)
library(bellreg)
# ML approach:
mle <- bellreg(nf ~ lroll, data = faults, approach = "mle")
summary(mle)
coef(mle)
vcov(mle)
# Bayesian approach:
bayes <- bellreg(nf ~ lroll, data = faults, approach = "bayes")
summary(bayes)
confint(mle)
# ML approach:
mle <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = "mle")
summary(mle)
coef(mle)
vcov(mle)
object <- mle
object
p <- object$p
q <- object$q
V <- vcov(object)
par.hat <- object$fit$par
alpha <- 1-level
level <- 0.95
alpha <- 1-level
d <- stats::qnorm(1 - alpha/2)*sqrt(diag(V))
lower <- par.hat - d
upper <- par.hat + d
CI <- cbind(lower, upper)
Ci
CI
labels <- round(100*(c(alpha/2, 1-alpha/2)),1)
colnames(CI) <- paste0(labels, "%")
CI
confint.zibellreg <- function(object, level=0.95, ...){
confint.zibellreg <- function(object, level=0.95, ...){
confint.zibellreg <- function(object, level=0.95, ...){
p <- object$p
q <- object$q
V <- vcov(object)
par.hat <- object$fit$par
alpha <- 1-level
d <- stats::qnorm(1 - alpha/2)*sqrt(diag(V))
lower <- par.hat - d
upper <- par.hat + d
ci <- cbind(lower, upper)
labels <- round(100*(c(alpha/2, 1-alpha/2)),1)
colnames(ci) <- paste0(labels, "%")
CI <- list("Degenerated dist." = ci[1:p, ], "Bell dist." = ci[(q+1):(q+p,])
return(CI)
}
confint.zibellreg <- function(object, level=0.95, ...){
p <- object$p
q <- object$q
V <- vcov(object)
par.hat <- object$fit$par
alpha <- 1-level
d <- stats::qnorm(1 - alpha/2)*sqrt(diag(V))
lower <- par.hat - d
upper <- par.hat + d
ci <- cbind(lower, upper)
labels <- round(100*(c(alpha/2, 1-alpha/2)),1)
colnames(ci) <- paste0(labels, "%")
CI <- list("Degenerated dist." = ci[1:p, ], "Bell dist." = ci[(q+1):(q+p,])
return(CI)
}
confint.zibellreg <- function(object, level=0.95, ...){
p <- object$p
q <- object$q
V <- vcov(object)
par.hat <- object$fit$par
alpha <- 1-level
d <- stats::qnorm(1 - alpha/2)*sqrt(diag(V))
lower <- par.hat - d
upper <- par.hat + d
ci <- cbind(lower, upper)
labels <- round(100*(c(alpha/2, 1-alpha/2)),1)
colnames(ci) <- paste0(labels, "%")
CI <- list("Degenerated dist." = ci[1:p, ], "Bell dist." = ci[(q+1):(q+p,])
return(CI)
}
p <- object$p
q <- object$q
V <- vcov(object)
par.hat <- object$fit$par
alpha <- 1-level
d <- stats::qnorm(1 - alpha/2)*sqrt(diag(V))
lower <- par.hat - d
upper <- par.hat + d
ci <- cbind(lower, upper)
labels <- round(100*(c(alpha/2, 1-alpha/2)),1)
colnames(ci) <- paste0(labels, "%")
CI <- list("Degenerated dist." = ci[1:p, ], "Bell dist." = ci[(q+1):(q+p,])
return(CI)
}
ci[1:p, ]
CI <- list("Degenerated dist." = ci[1:p, ], "Bell dist." = ci[(q+1):(q+p),])
CI
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
devtools::test()
devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
devtools::build_manual()
devtools::submit_cran()
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
devtools::test()
devtools::check()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
devtools::test()
devtools::check()
devtools::submit_cran()
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
devtools::test()
devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
devtools::build_manual()
devtools::submit_cran()
library(bellreg)
#usethis::use_build_ignore("inst/mystuff")
usethis::use_build_ignore("inst/script_development.R")
usethis::use_build_ignore(".travis.yml")
#usethis::use_git_ignore("inst/mystuff")
#usethis::use_cran_comments()
devtools::document()
devtools::load_all()
devtools::install(quick=TRUE)
#devtools::install()
devtools::test()
devtools::check()
# devtools::check_win_devel()
# rhub::check_for_cran()
devtools::build_manual()
# devtools::submit_cran()
devtools::check_win_release()
devtools::submit_cran()
devtools::build()
